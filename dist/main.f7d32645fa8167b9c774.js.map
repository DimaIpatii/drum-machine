{"version":3,"sources":["webpack://drum-machine/./src/index.js"],"names":["setLogLevel","appState","power","kits","name","id","selected","tracks","keyCode","buttonName","url","audioName","volumeLevel","SWITCH_POWER","VOLUME_LEVEL","SELECTED_KIT","reducer","state","action","type","playload","map","kit","ControllPanel","togglePower","getVolumeLevel","getSelectedKit","clipName","React","setPower","volumeButtonState","setVolumeButtonState","volume","setVolume","setKit","clip","setClip","selectKit","event","target","find","className","htmlFor","defaultChecked","onClick","min","max","value","step","onChange","Number","length","kitButton","key","Clips","selectedClip","trackList","setTacks","playClip","document","getElementById","play","closest","Array","from","querySelectorAll","forEach","el","addEventListener","track","dataset","keycode","data-keycode","src","App","app","dispatch","setClipName","powerState","kitId","ReactDOM","module","hot","accept"],"mappings":"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","file":"main.f7d32645fa8167b9c774.js","sourcesContent":["/* eslint-disable react/prop-types */\n// Clear DevTool [HMR] messages:\nimport {setLogLevel} from 'webpack/hot/log';\nsetLogLevel('error');\n\n// Sass:\nimport './sass/main.scss';\n\n//React:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst kits = [\n    {\n      name : 'Heater',\n      id : 'kit-1',\n      selected : true,\n      tracks : [\n        {\n          keyCode: 81,\n          id : 'heater-1',\n          buttonName : 'Q',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n          audioName : 'Heater 1'\n        },\n        {\n          keyCode: 87,\n          id : 'heater-2',\n          buttonName : 'W',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n          audioName : 'Heater 2'\n        },\n        {\n          keyCode: 69,\n          id : 'heater-1',\n          buttonName : 'E',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n          audioName : 'Heater 3'\n        },\n        {\n          keyCode: 65,\n          id : 'heater-4',\n          buttonName : 'A',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n          audioName : 'Heater 4'\n        },\n        {\n          keyCode: 83,\n          id : 'clap',\n          buttonName : 'S',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n          audioName : 'Clap'\n        },\n        {\n          keyCode: 68,\n          id : 'open-hh',\n          buttonName : 'D',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n          audioName : 'Open-HH'\n        },\n        {\n          keyCode: 90,\n          id : \"kick-n'-hat\",\n          buttonName : 'Z',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n          audioName : \"Kick-n'-Hat\"\n        },\n        {\n          keyCode: 88,\n          id : 'kick',\n          buttonName : 'X',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n          audioName : 'Kick'\n        },\n        {\n          keyCode: 67,\n          id : 'closed-hh',\n          buttonName : 'C',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n          audioName : 'Closed-HH'\n        }\n      ]\n    },\n    {name : 'Piano',\n     id : 'kit-2',\n     selected : false,\n      tracks : [\n        {\n          keyCode: 81,\n          id : 'chord-1',\n          buttonName : 'Q',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\n          audioName : 'Chord 1'\n        },\n        {\n          keyCode: 87,\n          id : 'chord-2',\n          buttonName : 'W',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\n          audioName : 'Chord 2'\n        },\n        {\n          keyCode: 69,\n          id : 'chord-3',\n          buttonName : 'E',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\n          audioName : 'Chord 3'\n        },\n        {\n          keyCode: 65,\n          id : 'shaker',\n          buttonName : 'A',\n          url :'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\n          audioName : 'Shaker'\n        },\n        {\n          keyCode: 83,\n          id : 'open-hh',\n          buttonName : 'S',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\n          audioName : 'Open-HH'\n        },\n        {\n          keyCode: 68,\n          id : 'closed-hh',\n          buttonName : 'D',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\n          audioName : 'Closed-HH'\n        },\n        {\n          keyCode: 90,\n          id : 'punchy-kick',\n          buttonName : 'Z',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\n          audioName : 'Punchy-Kick'\n        },\n        {\n          keyCode: 88,\n          id : 'side-stick',\n          buttonName : 'X',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\n          audioName : 'Side-Stick'\n        },\n        {\n          keyCode: 67,\n          id : 'snare',\n          buttonName : 'C',\n          url : 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\n          audioName : 'Snare'\n        }\n  \n      ]\n    }\n    \n  ];\n  \n  \n  \n  const appState = {\n    power : false,\n    kits : kits,\n    volumeLevel : 0.5,\n  }\n  \n  const SWITCH_POWER = 'SWITCH_POWER';\n  const VOLUME_LEVEL = 'VOLUME_LEVEL';\n  const SELECTED_KIT = 'SELECTED_KIT';\n  \n  const reducer = (state,action) => {\n      if(action.type === SWITCH_POWER){\n          state.power = {power : action.playload.power};\n          return {...state, ...state.power};\n      }\n    \n      if(action.type === VOLUME_LEVEL){\n        state.volumeLevel =  action.playload.volumeLevel;\n        return {...state};\n      }\n    \n      if(action.type === SELECTED_KIT){\n  \n        const kits = state.kits.map(kit => {\n          \n          if(kit.id === action.playload.id){\n            kit.selected = true;\n            return kit;\n          }\n          \n          kit.selected = false;\n          return kit;\n          \n        });\n        \n        return {...state, kits};\n      }\n    \n    return state;\n  }\n  \n  \n  \n  \n  const ControllPanel = ({appState, togglePower, getVolumeLevel, getSelectedKit, clipName}) => {\n    \n    const [power,setPower] = React.useState(false);\n    const [volumeButtonState, setVolumeButtonState] = React.useState(false);\n    const [volume, setVolume] = React.useState(appState.volumeLevel);\n    const [kit, setKit] = React.useState('');\n    const [clip,setClip] = React.useState('')\n    \n    const togglePowerButton = () => {\n      setPower(!power);\n      togglePower(power);\n    }\n    \n    const toggleVolumeButton = () => setVolumeButtonState(!volumeButtonState);\n    const setVolumeLevel = (event) => setVolume(Number(event.target.value));\n    const selectKit = (event) => {\n      getSelectedKit(event.target.id)\n      setClip('');\n    };\n    \n    React.useEffect(() => {\n      getVolumeLevel(volume);\n    }, [volume]);\n    \n    React.useEffect(() => {\n      const {name} = appState.kits.find(kit => kit.selected === true);\n      setKit(name);\n    },[appState.kits]);\n    \n    React.useEffect(() => {\n      setClip(clipName);\n    },[clipName]);\n    \n    return (\n    <header className=\"app-controller\">\n        \n        {/*Controller Top*/}\n        <div className=\"controller-top\">\n            \n            <label htmlFor=\"on\" className={`switch-button ${appState.power ? '' : 'off'}`}>\n              <input type=\"checkbox\" defaultChecked='checked' onClick={togglePowerButton} name=\"switch\" id=\"on\" className=\"switch-button-input\"/>  \n            </label>\n          \n          \n          <div id=\"screen\" className={`screen ${appState.power ? 'screen_active' : ''}`}>\n            <div id=\"display\" className=\"screen__clip\">{ appState.power ? clip : ''}</div>\n            <div id=\"display-kit\" className=\"screen__kit\" >\n              {appState.power ? `Kits: ${kit}` : ''}\n            </div>\n          </div>\n          \n          \n          <div className=\"volume\">\n            \n            <button type=\"button\" className=\"volume__button\" onClick={toggleVolumeButton}>\n              <i className=\"volume__icon\"><ion-icon name=\"volume-high-outline\"></ion-icon></i>\n             </button>\n            \n             <div className={`volume__level ${volumeButtonState ? 'show-volume-level' : ''}`}>\n               <label htmlFor='volume-range'>\n                 <input \n                   type=\"range\" \n                   id=\"volume-range\" \n                   className='volume__range' \n                   min=\"0\" \n                   max=\"1\" \n                   value={volume} \n                   step='0.1' \n                   onChange={setVolumeLevel}\n                   />\n      \n                 \n               </label>\n             </div>\n            \n          </div>\n        </div>\n        \n        {/*Controller Kits Bottom*/}\n        <div className=\"kits\">\n          {appState.kits.length > 0 \n            ? (appState.kits.map(kitButton => {\n              return (\n                 <button\n                    key={kitButton.id}\n                    id={kitButton.id}\n                    type=\"button\" \n                    className={`kits__item ${appState.power ? 'kits__item_active' : ''} ${kitButton.selected && appState.power ? 'selected-kit' : ''} `}\n                    onClick={selectKit}\n                   >\n                    {kitButton.name}\n                    \n                 </button>\n              )\n            })\n             \n          ):('')\n          }\n          </div>\n      </header>\n    )\n  }\n  \n  const Clips = ({appState, selectedClip}) => {\n    const [trackList, setTacks] = React.useState([]);\n    \n    // ****************************\n    // Clip Controller:\n    // ****************************\n    const playClip = (keyCode) => {\n        let clip;\n      \n        switch(true) {\n          case keyCode == 81:\n            clip = document.getElementById('Q');\n            break;\n          case keyCode == 87:\n            clip = document.getElementById('W');\n            break;\n          case keyCode == 69:\n            clip = document.getElementById('E');\n            break;\n          case keyCode == 65:\n            clip = document.getElementById('A');\n            break;\n          case keyCode == 83:\n            clip = document.getElementById('S');\n            break;\n          case keyCode == 68:\n            clip = document.getElementById('D');\n            break;\n          case keyCode == 90:\n            clip = document.getElementById('Z');\n            break;\n          case keyCode == 88:\n            clip = document.getElementById('X');\n            break;\n          case keyCode === 67:\n            clip = document.getElementById('C');\n            break;\n           default : \n              return;\n        }\n  \n        if(appState.power === true){\n            clip.play();\n            selectedClip(clip.closest('button').name);\n        } \n    }\n   \n    // Get tracks list from from selected kit:\n    React.useEffect(() => {\n      const {tracks} = appState.kits.find(kit => kit.selected === true);\n      setTacks([...tracks]);\n       \n    },[appState.kits]);\n    \n    // Volume Controller\n    React.useEffect(() => {\n      const clips = Array.from(document.querySelectorAll('.clip'));\n      clips.forEach(el => el.volume = appState.volumeLevel)\n    },[appState.volumeLevel]);\n    \n    // Play clip pressing clip button\n    React.useEffect(() => {\n     document.addEventListener(\"keydown\",(event) =>  {\n       playClip(event.keyCode);\n     });\n    },[]);\n   \n    \n    \n    return (\n     <main className=\"main\">\n         {trackList.length > 0\n          ? (\n          trackList.map(track => {\n            \n                return (\n                   <button\n                     type=\"button\"\n                     key={track.keyCode}\n                     id={track.id} \n                     className={`drum-pad ${appState.power ? 'drumpad-active' : '' }`} name={track.audioName} \n                     onClick={(event) => {\n                      playClip(Number(event.target.dataset.keycode))\n                    }}\n                    data-keycode={track.keyCode}\n                     >\n                      <audio id={track.buttonName} src={track.url} className=\"clip\"></audio>\n                      {track.buttonName}\n                      \n                </button>\n                )\n            })\n            ) \n          : ('')}\n       \n      </main>\n    )\n  };\n  \n  \n  const App = () => {\n    const [app, dispatch] = React.useReducer(reducer, appState);\n    const [clipName, setClipName] = React.useState('');\n    \n    \n    // ****************************\n    // Reducer State:\n    // ****************************\n    // Get Power State:\n    const power = (powerState) => {\n      return dispatch({\n        type : SWITCH_POWER,\n        playload : {\n          power : powerState,\n        }\n      })\n    };\n    \n    // Get Volume Level State:\n    const volumeLevel = (volume) => {\n        \n        return dispatch({\n          type : VOLUME_LEVEL,\n          playload : {\n            volumeLevel : volume,\n          }\n        })\n    }\n    \n    // Get Selected Kits State:\n    const selectedKit = (kitId) => {\n      return dispatch({\n        type : SELECTED_KIT,\n        playload : { id : kitId }\n      });\n      \n    };\n    \n    return (\n      <div id=\"drum-machine\" className=\"app\" >\n        <ControllPanel appState={app} togglePower={power} getVolumeLevel={volumeLevel} getSelectedKit={selectedKit} clipName={clipName} />\n        <Clips appState={app} selectedClip={setClipName} />\n      </div>\n    )\n  };\n  \n  \n  ReactDOM.render(<App />, document.getElementById('root'));\n  \n  \n  \n\n\nmodule.hot.accept();"],"sourceRoot":""}